{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "logicAppName": {
            "type": "string",
            "metadata": { "description": "Logic App adını girin." }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": { "description": "Logic App'in konuşlandırılacağı Azure bölgesi." }
        },
        "socradarCompanyId": {
            "type": "string",
            "metadata": { "description": "SOCRadar API çağrısı için Şirket ID'si." }
        },
        "socradarCompanyKey": {
            "type": "securestring",
            "metadata": { "description": "SOCRadar API çağrısı için Şirket Anahtarı." }
        },
        "sentinelSubscriptionId": {
            "type": "string",
            "metadata": { "description": "Azure Sentinel çalışma alanının Abonelik Kimliği." }
        },
        "sentinelResourceGroup": {
            "type": "string",
            "metadata": { "description": "Azure Sentinel çalışma alanının Kaynak Grubu Adı." }
        },
        "sentinelWorkspaceName": {
            "type": "string",
            "metadata": { "description": "Azure Sentinel çalışma alanının Adı." }
        },
        "azuresentinelConnectionName": {
            "type": "string",
            "defaultValue": "azuresentinel",
            "metadata": { "description": "Azure Sentinel Yönetilen API Bağlantısı adı." }
        }
    },
    "variables": {
        "azureSentinelConnectionId": "[concat('/subscriptions/', parameters('sentinelSubscriptionId'), '/resourceGroups/', parameters('sentinelResourceGroup'), '/providers/Microsoft.Web/connections/', parameters('azuresentinelConnectionName'))]",
        "azureSentinelManagedApiId": "[concat('/subscriptions/', parameters('sentinelSubscriptionId'), '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/azuresentinel')]",
        
        // ARM kısıtlaması nedeniyle Logic App çalışma zamanında çalışacak tarih ifadesini kaçırıyoruz
        "runtimeDateExpression": "[[formatDateTime(addMinutes(utcNow(),-3),'yyyy-MM-ddTHH:mm:ssZ')]]",
        
        // Sentinel Path ifadesini basitleştirip ARM değişkenine atıyoruz
        "sentinelPath": "[concat('/Incidents/subscriptions/', parameters('sentinelSubscriptionId'), '/resourceGroups/', parameters('sentinelResourceGroup'), '/workspaces/', parameters('sentinelWorkspaceName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('azuresentinelConnectionName')]",
            "location": "[parameters('location')]",
            "properties": {
                "api": { "id": "[variables('azureSentinelManagedApiId')]" },
                "displayName": "[parameters('azuresentinelConnectionName')]",
                "parameterValues": {}
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('logicAppName')]",
            "location": "[parameters('location')]",
            "dependsOn": [ "[resourceId('Microsoft.Web/connections', parameters('azuresentinelConnectionName'))]" ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "actions": {
                        "For_each": {
                            "actions": {
                                "Create_incident": {
                                    "inputs": {
                                        "body": {
                                            "description": "@items('For_each')?['alarm_text']",
                                            "severity": "@items('For_each')?['alarm_risk_level']",
                                            "status": "New",
                                            "title": "@{items('For_each')?['alarm_type_details']?['alarm_generic_title']} @{items('For_each')?['alarm_id']}"
                                        },
                                        "host": {
                                            "connection": { "name": "@parameters('$connections')['azuresentinel']['connectionId']" }
                                        },
                                        "method": "put",
                                        "path": "[variables('sentinelPath')]"
                                    },
                                    "type": "ApiConnection"
                                }
                            },
                            "foreach": "@outputs('Parse_JSON')?['body']?['data']",
                            "runAfter": { "Parse_JSON": [ "Succeeded" ] },
                            "type": "Foreach"
                        },
                        "HTTP": {
                            "inputs": {
                                "method": "GET",
                                // URI boşlukları temizlendi ve runtimeDateExpression kullanıldı
                                "uri": "[concat('https://platform.socradar.com/api/company/',parameters('socradarCompanyId'),'/incidents/v4?key=',parameters('socradarCompanyKey'),'&start_date=',variables('runtimeDateExpression'))]"
                            },
                            "runAfter": {},
                            "type": "Http"
                        },
                        "Parse_JSON": {
                            "inputs": {
                                "content": "@body('HTTP')",
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "items": {
                                                "properties": {
                                                    "alarm_asset": { "type": ["string", "null"] },
                                                    "alarm_assignees": { "type": "array" },
                                                    "alarm_id": { "type": "integer" },
                                                    "alarm_related_assets": { "type": "array" },
                                                    "alarm_related_entities": { "type": "array" },
                                                    "alarm_response": { "type": ["string", "null"] },
                                                    "alarm_risk_level": { "type": "string" },
                                                    "alarm_text": { "type": "string" },
                                                    "alarm_type_details": {
                                                        "properties": {
                                                            "alarm_compliance_list": { "type": "array" },
                                                            "alarm_default_mitigation_plan": { "type": ["string", "null"] },
                                                            "alarm_default_risk_level": { "type": "string" },
                                                            "alarm_detection_and_analysis": { "type": ["string", "null"] },
                                                            "alarm_generic_title": { "type": "string" },
                                                            "alarm_main_type": { "type": "string" },
                                                            "alarm_post_incident_analysis": { "type": ["string", "null"] },
                                                            "alarm_sub_type": { "type": "string" }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "approved_by": { "type": ["string", "null"] },
                                                    "content": { "type": ["object", "null"] },
                                                    "date": { "type": "string" },
                                                    "extra": { "type": "array" },
                                                    "history": { "type": "array" },
                                                    "is_approved": { "type": "boolean" },
                                                    // NULL Hatalarını çözen düzeltme:
                                                    "last_notification_date": { "type": ["string", "null"] },
                                                    "notes": { "type": "array" },
                                                    "notification_id": { "type": "integer" },
                                                    "status": { "type": "string" },
                                                    "tags": { "type": "array" }
                                                },
                                                "required": [
                                                    "alarm_id",
                                                    "alarm_risk_level",
                                                    "alarm_text",
                                                    "alarm_type_details",
                                                    "date",
                                                    "is_approved",
                                                    "notification_id",
                                                    "status"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "is_success": { "type": "boolean" },
                                        "message": { "type": "string" },
                                        "response_code": { "type": "integer" }
                                    },
                                    "type": "object"
                                }
                            },
                            "runAfter": { "HTTP": [ "Succeeded" ] },
                            "type": "ParseJson"
                        }
                    },
                    "contentVersion": "1.0.0.0",
                    "outputs": {},
                    "parameters": { "$connections": { "defaultValue": {}, "type": "Object" } },
                    "triggers": { "Recurrence": { "evaluatedRecurrence": { "frequency": "Minute", "interval": 3 }, "recurrence": { "frequency": "Minute", "interval": 3 }, "type": "Recurrence" } }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[variables('azureSentinelConnectionId')]",
                                "connectionName": "[parameters('azuresentinelConnectionName')]",
                                "id": "[variables('azureSentinelManagedApiId')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}
